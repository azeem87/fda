CREATE FUNCTION public.set_current_timestamp_updated_at() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
  _new record;
BEGIN
  _new := NEW;
  _new."updated_at" = NOW();
  RETURN _new;
END;
$$;
CREATE TABLE public.area_codes (
    id integer NOT NULL,
    product_id integer NOT NULL,
    pin_code integer NOT NULL,
    name text NOT NULL
);
COMMENT ON TABLE public.area_codes IS 'Product can be delivered to which area';
CREATE SEQUENCE public.area_codes_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER SEQUENCE public.area_codes_id_seq OWNED BY public.area_codes.id;
CREATE TABLE public.order_items (
    id integer NOT NULL,
    quantity integer NOT NULL,
    product_id integer NOT NULL,
    order_id uuid NOT NULL
);
COMMENT ON TABLE public.order_items IS 'user cart items table';
CREATE SEQUENCE public.order_items_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER SEQUENCE public.order_items_id_seq OWNED BY public.order_items.id;
CREATE TABLE public.orders (
    ordered_date timestamp with time zone DEFAULT now() NOT NULL,
    shipped_date timestamp with time zone,
    order_status text NOT NULL,
    user_shipping_address text NOT NULL,
    expected_delivery_date timestamp with time zone,
    delivery_person_id integer,
    rating integer,
    discount integer,
    promo_code integer,
    total_amount double precision NOT NULL,
    order_auth_code integer,
    customer_id integer NOT NULL,
    is_valid boolean,
    id uuid NOT NULL
);
COMMENT ON TABLE public.orders IS 'Order Table';
CREATE TABLE public.payments (
    id integer NOT NULL,
    payment_type text NOT NULL,
    status text NOT NULL,
    card_payment_invoice_id text,
    order_id uuid NOT NULL
);
CREATE SEQUENCE public.payments_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER SEQUENCE public.payments_id_seq OWNED BY public.payments.id;
CREATE TABLE public.products (
    id integer NOT NULL,
    description text NOT NULL,
    price integer NOT NULL,
    category text NOT NULL,
    title text NOT NULL,
    product_bucket_id text,
    shipping_charge integer,
    base64_image_text text NOT NULL,
    stock_count integer NOT NULL
);
COMMENT ON TABLE public.products IS 'Products table';
CREATE SEQUENCE public.products_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER SEQUENCE public.products_id_seq OWNED BY public.products.id;
CREATE TABLE public.users (
    name text,
    user_id text NOT NULL,
    created_at time without time zone DEFAULT now() NOT NULL,
    updated_at time without time zone DEFAULT now() NOT NULL,
    id integer NOT NULL,
    phone numeric,
    alt_phone numeric,
    address text,
    delivery_address text,
    pin_code numeric,
    email_id text NOT NULL
);
COMMENT ON TABLE public.users IS 'user table';
CREATE SEQUENCE public.user_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER SEQUENCE public.user_id_seq OWNED BY public.users.id;
ALTER TABLE ONLY public.area_codes ALTER COLUMN id SET DEFAULT nextval('public.area_codes_id_seq'::regclass);
ALTER TABLE ONLY public.order_items ALTER COLUMN id SET DEFAULT nextval('public.order_items_id_seq'::regclass);
ALTER TABLE ONLY public.payments ALTER COLUMN id SET DEFAULT nextval('public.payments_id_seq'::regclass);
ALTER TABLE ONLY public.products ALTER COLUMN id SET DEFAULT nextval('public.products_id_seq'::regclass);
ALTER TABLE ONLY public.users ALTER COLUMN id SET DEFAULT nextval('public.user_id_seq'::regclass);
ALTER TABLE ONLY public.area_codes
    ADD CONSTRAINT area_codes_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.order_items
    ADD CONSTRAINT order_items_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_id_key UNIQUE (id);
ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.payments
    ADD CONSTRAINT payments_card_payment_id_key UNIQUE (card_payment_invoice_id);
ALTER TABLE ONLY public.payments
    ADD CONSTRAINT payments_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.products
    ADD CONSTRAINT products_id_key UNIQUE (id);
ALTER TABLE ONLY public.products
    ADD CONSTRAINT products_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.users
    ADD CONSTRAINT user_alt_phone_key UNIQUE (alt_phone);
ALTER TABLE ONLY public.users
    ADD CONSTRAINT user_email_id_key UNIQUE (email_id);
ALTER TABLE ONLY public.users
    ADD CONSTRAINT user_phone_key UNIQUE (phone);
ALTER TABLE ONLY public.users
    ADD CONSTRAINT user_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.users
    ADD CONSTRAINT "user_userId_key" UNIQUE (user_id);
CREATE TRIGGER set_public_user_updated_at BEFORE UPDATE ON public.users FOR EACH ROW EXECUTE FUNCTION public.set_current_timestamp_updated_at();
COMMENT ON TRIGGER set_public_user_updated_at ON public.users IS 'trigger to set value of column "updated_at" to current timestamp on row update';
ALTER TABLE ONLY public.area_codes
    ADD CONSTRAINT area_codes_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id) ON UPDATE RESTRICT ON DELETE RESTRICT;
ALTER TABLE ONLY public.order_items
    ADD CONSTRAINT order_items_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE ONLY public.order_items
    ADD CONSTRAINT order_items_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.users(id);
ALTER TABLE ONLY public.payments
    ADD CONSTRAINT payments_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id) ON UPDATE CASCADE ON DELETE CASCADE;
